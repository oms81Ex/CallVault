# 자동 통화 녹음 앱 기능명세서 및 설계도

## 1. 기능명세서

### 1.1 앱 개요
"AutoCallRecorder" - 전화가 오면 자동으로 녹음하고 통화 종료 시 녹음을 저장하는 안드로이드 앱

### 1.2 주요 기능
1. **통화 감지**
   - 수신 전화 감지
   - 통화 시작 및 종료 감지

2. **자동 녹음**
   - 통화 시작 시 자동 녹음 시작
   - 통화 종료 시 자동 녹음 종료 및 저장

3. **설정 기능**
   - 녹음 사용/비활성화 설정
   - 녹음 파일 저장 위치 설정
   - 녹음 파일 이름 형식 설정 (날짜, 시간, 전화번호 등)
   - 녹음 품질 설정

4. **녹음 파일 관리**
   - 녹음 파일 목록 보기
   - 녹음 파일 재생, 삭제, 공유
   - 자동 삭제 기능 (오래된 녹음, 용량 제한 등)

5. **알림 기능**
   - 녹음 중 알림
   - 녹음 완료 알림
   - 저장 공간 부족 알림

### 1.3 사용자 인터페이스
1. **메인 화면**
   - 녹음 목록 표시
   - 설정 메뉴 접근 버튼
   - 녹음 활성화/비활성화 토글

2. **설정 화면**
   - 모든 설정 옵션 제공

3. **녹음 상세 화면**
   - 녹음 파일 재생
   - 파일 정보 표시
   - 삭제/공유 옵션

4. **백그라운드 서비스**
   - 사용자 인터페이스 없이 동작
   - 상태표시줄 알림으로 상태 표시

### 1.4 비기능적 요구사항
1. **성능**
   - 통화 감지 및 녹음 시작 지연 최소화 (1초 이내)
   - 배터리 소모 최적화

2. **보안 및 개인정보**
   - 민감한 녹음 파일 암호화 저장
   - 권한 요청 명확화

3. **호환성**
   - 안드로이드 버전 지원: 최소 안드로이드 8.0 (API 26)
   - 다양한 제조사 기기 호환성 테스트

## 2. 시스템 설계도

### 2.1 아키텍처 다이어그램
```
+----------------------------------+
|           사용자 인터페이스           |
| +------------------------------+ |
| |         MainActivity         | |
| +------------------------------+ |
| |        SettingsActivity      | |
| +------------------------------+ |
| |     RecordingListActivity    | |
| +------------------------------+ |
+----------------------------------+
                |
                v
+----------------------------------+
|             서비스 레이어            |
| +------------------------------+ |
| |      CallRecorderService     | |
| +------------------------------+ |
| |   CallStateMonitorReceiver   | |
| +------------------------------+ |
+----------------------------------+
                |
                v
+----------------------------------+
|             데이터 레이어            |
| +------------------------------+ |
| |    RecordingRepository       | |
| +------------------------------+ |
| |    RecordingDatabase         | |
| +------------------------------+ |
| |    SharedPreferences         | |
| +------------------------------+ |
+----------------------------------+
```

### 2.2 클래스 설계

#### 2.2.1 사용자 인터페이스 클래스
1. **MainActivity**: 앱의 메인 진입점
   - 녹음 목록 표시
   - 서비스 시작/중지 제어

2. **SettingsActivity**: 설정 화면
   - 앱 설정 관리

3. **RecordingListActivity**: 녹음 파일 목록
   - 녹음 파일 표시 및 관리

4. **RecordingDetailActivity**: 녹음 파일 상세 정보
   - 녹음 재생 및 관리

#### 2.2.2 서비스 레이어 클래스
1. **CallRecorderService**: 백그라운드 서비스
   - 전화 녹음 작업 수행
   - 포그라운드 서비스로 실행

2. **CallStateMonitorReceiver**: 브로드캐스트 리시버
   - 전화 상태 변화 감지
   - 서비스 시작/중지 트리거

3. **AudioRecorder**: 오디오 녹음 기능
   - 실제 녹음 작업 처리

#### 2.2.3 데이터 레이어 클래스
1. **RecordingRepository**: 녹음 데이터 액세스 레이어
   - 녹음 파일 메타데이터 관리

2. **RecordingDatabase**: 로컬 데이터베이스
   - 녹음 메타데이터 저장

3. **Recording**: 녹음 파일 모델 클래스
   - 녹음 파일 정보 저장

4. **SettingsManager**: 설정 관리
   - SharedPreferences 활용

### 2.3 주요 동작 흐름
1. **앱 시작 시**
   - MainActivity 로드
   - 필요 권한 확인 및 요청
   - 설정에 따라 CallRecorderService 시작

2. **전화 수신 시**
   - CallStateMonitorReceiver가 전화 상태 감지
   - 통화 시작 시 CallRecorderService에 녹음 시작 요청
   - AudioRecorder를 통해 녹음 시작

3. **통화 종료 시**
   - CallStateMonitorReceiver가 통화 종료 감지
   - CallRecorderService에 녹음 종료 요청
   - 녹음 파일 저장 및 메타데이터 데이터베이스에 저장
   - 설정에 따라 완료 알림 표시

4. **사용자 녹음 관리 시**
   - RecordingListActivity에서 녹음 목록 표시
   - RecordingDetailActivity에서 녹음 재생 및 관리

## 3. 단위 테스트 항목

### 3.1 서비스 레이어 테스트
1. **CallStateMonitorReceiverTest**
   - `testIncomingCallDetection`: 수신 전화 감지 정확성 테스트
   - `testCallEndDetection`: 통화 종료 감지 정확성 테스트
   - `testServiceStartOnCall`: 전화 수신 시 서비스 시작 테스트

2. **CallRecorderServiceTest**
   - `testServiceLifecycle`: 서비스 생명주기 테스트
   - `testRecordingStart`: 녹음 시작 기능 테스트
   - `testRecordingStop`: 녹음 종료 기능 테스트
   - `testForegroundNotification`: 알림 표시 테스트

3. **AudioRecorderTest**
   - `testAudioCapture`: 오디오 캡처 기능 테스트
   - `testFileCreation`: 녹음 파일 생성 테스트
   - `testRecordingQuality`: 다양한 품질 설정 테스트

### 3.2 데이터 레이어 테스트
1. **RecordingRepositoryTest**
   - `testSaveRecording`: 녹음 메타데이터 저장 테스트
   - `testGetAllRecordings`: 모든 녹음 조회 테스트
   - `testDeleteRecording`: 녹음 삭제 테스트
   - `testSearchRecordings`: 녹음 검색 테스트

2. **SettingsManagerTest**
   - `testDefaultSettings`: 기본 설정 값 테스트
   - `testSaveSettings`: 설정 저장 테스트
   - `testLoadSettings`: 설정 로드 테스트

### 3.3 UI 테스트
1. **MainActivityTest**
   - `testInitialState`: 초기 상태 표시 테스트
   - `testServiceToggle`: 서비스 토글 버튼 테스트
   - `testNavigateToSettings`: 설정 화면 이동 테스트

2. **RecordingListActivityTest**
   - `testListDisplay`: 녹음 목록 표시 테스트
   - `testEmptyState`: 녹음 없을 때 상태 테스트
   - `testItemClick`: 항목 클릭 동작 테스트
   - `testDeleteAction`: 삭제 동작 테스트

3. **SettingsActivityTest**
   - `testSettingsDisplay`: 설정 화면 표시 테스트
   - `testChangeSettings`: 설정 변경 테스트
   - `testSettingsPersistence`: 설정 유지 테스트

### 3.4 통합 테스트
1. **EndToEndTest**
   - `testCallRecordingFlow`: 전체 통화 녹음 흐름 테스트
   - `testMultipleCallHandling`: 연속 통화 처리 테스트
   - `testAppBackground`: 앱 백그라운드 상태에서 동작 테스트

2. **PermissionTest**
   - `testPermissionRequest`: 권한 요청 흐름 테스트
   - `testPermissionDenied`: 권한 거부 시 동작 테스트

3. **StressTest**
   - `testLongCallRecording`: 장시간 통화 녹음 테스트
   - `testLowStorageHandling`: 저장 공간 부족 시 동작 테스트
   - `testMultipleRecordings`: 다수 녹음 파일 관리 테스트

이 기능명세서와 설계도를 바탕으로 안드로이드 앱 개발을 진행하실 수 있습니다. 각 컴포넌트와 기능을 순차적으로 구현하면서 단위 테스트를 진행하시면 안정적인 앱을 개발하실 수 있을 것입니다.